#!/bin/ksh
#
# Script to run bator

%include <pbs.h>

%include <head.h>

module load cray-snplauncher

date=%DATUM%
run=%LAUF%

# My Environment
MY_DIR=/home/ms/at/kmcw/ECF
BASEDIR=${MY_DIR}/ASSIM/BATOR
OBSDIR=${MY_DIR}/ASSIM/OBS/${date}/${run}
BINDIR=${MY_DIR}/BIN
NAMELDIR=${MY_DIR}/NAMEL
BATORBIN=${BINDIR}/BATOR_cy40t1
MERGEOBSBIN=${BINDIR}/obsoul_merge_new.pl
CLIMDIR=${MY_DIR}/CLIM
SHUFFLEBIN=${BINDIR}/odbtools_cy40t1.x
MERGEBIN=${BINDIR}/merge_ioassign

LNATIONAL=.TRUE.
LMETAROBS=.FALSE.
LHYDROOBS=.FALSE.
LSCHIWMOBS=.TRUE.

hh1=$(/home/ms/at/kmcw/bin/datecalc $date$run -f -t -1:00 | cut -c 9-10)
date1=$(/home/ms/at/kmcw/bin/datecalc $date$run -f -t -1:00 | cut -c 1-8)
hh2=$(/home/ms/at/kmcw/bin/datecalc $date$run -f -t +1:00 | cut -c 9-10)
date2=$(/home/ms/at/kmcw/bin/datecalc $date$run -f -t +1:00 | cut -c 1-8)
hh3=$(/home/ms/at/kmcw/bin/datecalc $date$run -f -t -2:00 | cut -c 9-10)
date3=$(/home/ms/at/kmcw/bin/datecalc $date$run -f -t -2:00 | cut -c 1-8)
hh4=$(/home/ms/at/kmcw/bin/datecalc $date$run -f -t +2:00 | cut -c 9-10)
date4=$(/home/ms/at/kmcw/bin/datecalc $date$run -f -t +2:00 | cut -c 1-8)
hh5=$(/home/ms/at/kmcw/bin/datecalc $date$run -f -t -3:00 | cut -c 9-10)
date5=$(/home/ms/at/kmcw/bin/datecalc $date$run -f -t -3:00 | cut -c 1-8)
hh6=$(/home/ms/at/kmcw/bin/datecalc $date$run -f -t +3:00 | cut -c 9-10)
date6=$(/home/ms/at/kmcw/bin/datecalc $date$run -f -t +3:00 | cut -c 1-8)
ficleft=$(/home/ms/at/kmcw/bin/datecalc $date$run -f -t -1:30 | cut -c 1-12)
ficright=$(/home/ms/at/kmcw/bin/datecalc $date$run -f -t +1:30 | cut -c 1-12)

OBSFILE1=$OBSDIR/obsoul_taw_${date}_${run}0000.asc
OBSFILE2=$OBSDIR/obsoul_${date}_${run}0000.asc
OBSFILE3=$OBSDIR/obs_short_${date}${run}.tar
OBSFILE3h1=$OBSDIR/obs_short_${date1}${hh1}.tar
OBSFILE3h2=$OBSDIR/obs_short_${date2}${hh2}.tar
OBSFILE3h3=$OBSDIR/obs_short_${date3}${hh3}.tar
OBSFILE3b=$OBSDIR/obs_foreign_${date}${run}.tar
OBSFILE3bh1=$OBSDIR/obs_foreign_${date1}${hh1}.tar
OBSFILE3bh2=$OBSDIR/obs_foreign_${date2}${hh2}.tar
OBSFILE3bh3=$OBSDIR/obs_foreign_${date3}${hh3}.tar
OBSFILE4=$OBSDIR/obsoul_temp_${date}_${run}0000.asc
OBSFILE4a=$OBSDIR/obsoul_pseudosounding_${date}_${run}0000.asc
OBSFILE5=$OBSDIR/obsoul_pilot_${date}_${run}0000.asc
OBSFILE6=$OBSDIR/obsoul_ship_${date}_${run}0000.asc
OBSFILE7=$OBSDIR/obsoul_profiler_${date}_${run}0000.asc
OBSFILE13=$OBSDIR/obsoul_metar_${date}_${run}0000.asc
OBSFILE14=$OBSDIR/obsoul_hydro_${date}_${run}0000.asc
OBSFILE14a=$OBSDIR/obsoul_schiwm_${date}_${run}0000.asc

RUNDIR=${BASEDIR}/$PBS_JOBID
[[ ! -d ${RUNDIR} ]] && mkdir -p ${RUNDIR}
cd ${RUNDIR}

rm -fr ${RUNDIR}/*

OUTDIR=${BASEDIR}/${date}/${run}
[[ ! -d ${OUTDIR} ]] && mkdir -p ${OUTDIR}

cd ${OBSDIR}

if [ -s $OBSFILE1 ] ; then
  export OBSFILEZAMG=$OBSFILE1
elif [ -s ${OBSFILE2} ] ; then
  echo "no ZAMG SYNOP+TAWES file try synop only"
  cp ${OBSFILE2} $OBSFILE1
  export OBSFILEZAMG=$OBSFILE1
else
  touch $OBSFILE1
  export OBSFILEZAMG=$OBSFILE1
  echo "no ZAMG OBS file at all"
fi

if [ -s $OBSFILE3 ] ;then
  tar xvf $OBSFILE3

  rm -rf grib_7_seviri* bufr_7_* bufr_3_* obsoul_2_xxxxxx_xx_* obsoul_5_xxxxxx_xx_* obsoul_6_xxxxxx_xx_* obsoul_7_xxxxxx_xx_* bufr_6_*

  if [ -s ${OBSDIR}/obsoul_1_xxxxxx_xx_${date}${run}.gz ]
  then
    gunzip -f ${OBSDIR}/obsoul_1_xxxxxx_xx_${date}${run}.gz
    rm -f ${OBSDIR:="xxx"}/obsoul_1_xxxxxx_xx_*.gz
    export OBSFILEOPLACE=${OBSDIR}/obsoul_1_xxxxxx_xx_${date}${run}
  elif [ -s ${OBSDIR}/obsoul_1_xxxxxx_xx_${date1}${hh1}.gz ]
  then
    gunzip -f ${OBSDIR}/obsoul_1_xxxxxx_xx_${date1}${hh1}.gz
    rm -f ${OBSDIR:="xxx"}/obsoul_1_xxxxxx_xx_*.gz
    export OBSFILEOPLACE=${OBSDIR}/obsoul_1_xxxxxx_xx_${date1}${hh1}
  elif [ -s ${OBSDIR}/obsoul_1_xxxxxx_xx_${date2}${hh2}.gz ]
  then
    gunzip -f ${OBSDIR}/obsoul_1_xxxxxx_xx_${date2}${hh2}.gz
    rm -f ${OBSDIR:="xxx"}/obsoul_1_xxxxxx_xx_*.gz
    export OBSFILEOPLACE=${OBSDIR}/obsoul_1_xxxxxx_xx_${date2}${hh2}
  elif [ -s ${OBSDIR}/obsoul_1_xxxxxx_xx_${date3}${hh3}.gz ]
  then
    gunzip -f ${OBSDIR}/obsoul_1_xxxxxx_xx_${date3}${hh3}.gz
    rm -f ${OBSDIR:="xxx"}/obsoul_1_xxxxxx_xx_*.gz
    export OBSFILEOPLACE=${OBSDIR}/obsoul_1_xxxxxx_xx_${date3}${hh3}
  elif [ -s ${OBSDIR}/obsoul_1_xxxxxx_xx_${date4}${hh4}.gz ]
  then
    gunzip -f ${OBSDIR}/obsoul_1_xxxxxx_xx_${date4}${hh4}.gz
    rm -f ${OBSDIR:="xxx"}/obsoul_1_xxxxxx_xx_*.gz
    export OBSFILEOPLACE=${OBSDIR}/obsoul_1_xxxxxx_xx_${date4}${hh4}
  else
    rm -f ${OBSDIR:="xxx"}/obsoul_1_xxxxxx_xx_*.gz
    touch ${OBSDIR}/obsoul_1_xxxxxx_xx_${date}${run}
    export OBSFILEOPLACE=${OBSDIR}/obsoul_1_xxxxxx_xx_${date}${run}
    echo "no proper OPLACE OBS file"
  fi

else
  echo "no OPLACE OBS file at all"
  touch ${OBSDIR}/obsoul_1_xxxxxx_xx_${date}${run}
  export OBSFILEOPLACE=${OBSDIR}/obsoul_1_xxxxxx_xx_${date}${run}
fi

###merge observation files if both available###########
if [ -s ${OBSFILEOPLACE} ] && [ -s ${OBSFILEZAMG} ] ; then
  ls ${OBSFILEOPLACE} > LISTFILE
  ls ${OBSFILEZAMG} >> LISTFILE

  ##### add metar observations (optional) ######
  if [[ ${LMETAROBS} = ".TRUE." ]] && [ -s $OBSFILE13 ] ; then
    ls $OBSFILE13 >> LISTFILE
  fi

  #### add hydrological,environment station observations (optional) ##
  if [[ ${LHYDROOBS} = ".TRUE." ]] && [ -s $OBSFILE14 ] ; then
    ls $OBSFILE14 >> LISTFILE
  fi
  ### add additional OPLACE synop data ##
  if [[ $LNATIONAL = ".TRUE." ]] && [ -s $OBSFILE3b ] ; then
    countries="cz sk si hu ro cr hr"
    tar xvf $OBSFILE3b
    for cc in $countries ; do
      if [[ -s obsoul_1_xxxxxy_${cc}_${date}${run}.gz ]] ; then
        gunzip -f obsoul_1_xxxxxy_${cc}_${date}${run}.gz
      fi
      [ -s obsoul_1_xxxxxy_${cc}_${date}${run} ] && ls obsoul_1_xxxxxy_${cc}_${date}${run} >>LISTFILE
    done
  fi
  #### add SCHI-WM station observations (optional) ##
  if [[ ${LSCHIWMOBS} = ".TRUE." ]] && [ -s $OBSFILE14a ] ; then
    ls $OBSFILE14a >> LISTFILE
  fi

  ${MERGEOBSBIN} -obsoul OBSFILE -files LISTFILE

  rm -f LISTFILE
  rm -f ${OBSDIR:="xxx"}/obsoul_1_xxxxxx_xx_*

  mv OBSFILE ${OUTDIR}/

elif [ -s $OBSFILEZAMG ] ; then
  cp ${OBSFILEZAMG} ${OUTDIR}/OBSFILE
elif [ -s ${OBSFILEOPLACE} ] ; then
  cp ${OBSFILEOPLACE} ${OUTDIR}/OBSFILE
else
  echo "no obsfile at all - exit 44"
  exit 44
fi

##########################################################
###create ficdatefile with assimilation window ##########
rm -f ${OUTDIR}/ficdate
echo "${ficleft}00" > ${OUTDIR}/ficdate
echo "${ficright}00" >> ${OUTDIR}/ficdate
##########################################################

cd ${RUNDIR}

# MPI, openMP env, etc.
#-----------------------
export PSM2_RANKS_PER_CONTEXT=2

export MPI_DSM_CPULIST="0-35:allhosts"
export MPI_DSM_DISTRIBUTE=1
export MPI_DSM_VERBOSE=1

export MPI_MEM_ALIGN=128
export MPI_BUFFER_MAX=2000000
export MPI_BUFS_PER_PROC=1024
export MPI_REQUEST_MAX=400000

export MKL_DYNAMIC=FALSE
export F_UFMTENDIAN=big
export FORT_BUFFERED=true
export FORT_BLOCKSIZE=1048576

export OMP_NUM_THREADS=1
export OMP_DYNAMIC=FALSE
export KMP_STACKSIZE=500m
export KMP_MONITOR_STACKSIZE=500m
export KMP_AFFINITY=disabled

export DR_HOOK=0
export DR_HOOK_SILENT=1
export DR_HOOK_IGNORE_SIGNALS=-1
export EC_PROFILE_HEAP=0

NPROMA=-32
export NPROC=$EC_total_tasks
NPRGPEW=1
NPRGPNS=1
NPRTRV=$NPRGPEW
NPRTRW=$NPRGPNS
NSTRIN=$NPROC
NSTROUT=$NPROC

export NPOOLS=1
export BATOR_NBPOOL=1

export BATOR_NBSLOT=1
export ODB_IO_METHOD=1
export ODB_CMA=ECMA
export ODB_STATIC_LINKING=1
export BATOR_LAMFLAG=1

export IOASSIGN=IOASSIGN
export ODB_ANALYSIS_DATE=$date
export ODB_ANALYSIS_TIME=${run}0000
export ODB_SRCPATH_ECMA=${RUNDIR}/ECMA
export ODB_DATAPATH_ECMA=${RUNDIR}/ECMA
export ODB_FEBINPATH="."

export TIME_INIT_YYYYMMDD=$date
export TIME_INIT_HHLMMSS=${run}0000


export TO_ODB_ECMWF=0
export TO_ODB_SWAPOUT=0
export ODB_DEBUG=0
export ODB_CTX_DEBUG=0
export ODB_REPRODUCIBLE_SEQNO=2
export ODB_STATIC_LINKING=1
export ODB_IO_METHOD=1
export F_RECLUNIT=WORD
export out_BASE=ECMA
export ODB_ECMA_CREATE_POOLMASK=1
export ODB_ECMA_POOLMASK_FILE=$RUNDIR/$out_BASE/ECMA.poolmask

# get input data (ELSC*, namelist, binary, etc.)
cp ${OUTDIR}/OBSFILE ./OBSOUL
cp ${CLIMDIR}/LISTE_NOIRE_DIAP .
cp ${BINDIR}/ioassign_cy40t1 ./ioassign
cp ${NAMELDIR}/namelist_lamflag_cy40t1 ./NAM_lamflag
cp ${NAMELDIR}/namelist_bator_cy40t1 ./NAMELIST
cp ${BINDIR}/create_ioassign_cy40t1 ./create_ioassign
cp ${OUTDIR}/ficdate ./ficdate
cp ${CLIMDIR}/param_bator.cfg_cy40t1 param.cfg
cp ${CLIMDIR}/LIST_GPSSOL list_gpssol 

./create_ioassign -l${ODB_CMA} -n${BATOR_NBPOOL}

mpiexec -n $NPROC $BATORBIN 

tar cvf ecma_raw.tar ECMA*
mv ECMA ECMA.conv

# name of merged database
out_BASE=ECMA
export SWAPP_ODB_IOASSIGN=$RUNDIR/ioassign
export ODB_SRCPATH_ECMA=$RUNDIR/$out_BASE
export ODB_DATAPATH_ECMA=$RUNDIR/$out_BASE

liste=""

liste=${liste}" -t "conv

cp $MERGEBIN ./merge_ioassign

./merge_ioassign -d $RUNDIR ${liste}

unset liste

export IOASSIGN=$RUNDIR/$out_BASE/IOASSIGN
export ODB_ECMA_CREATE_POOLMASK=1
export ODB_ECMA_POOLMASK_FILE=$RUNDIR/$out_BASE/ECMA.poolmask
export TIME_INIT_YYYYMMDD=$date
export TIME_INIT_HHLMMSS=${run}0000

# get number of pools
na=`head -5 ${out_BASE}/ECMA.dd | tail -1`
nb=1

ln -s $SHUFFLEBIN shuffle

#aprun -n 1 ./shuffle -i$out_BASE -o$out_BASE -b$nb -a$na
mpiexec -n 1 ./shuffle -i$out_BASE -o$out_BASE -b$nb -a$na

# save merged bases (including sub bases)
tar cvf ECMA_merged.tar $out_BASE ECMA.*

mv ecma_raw.tar $OUTDIR/ecma_raw.tar
mv ECMA_merged.tar $OUTDIR/ECMA_merged.tar
cp $out_BASE/ECMA.dd $OUTDIR/ECMA.dd

cd ${BASEDIR}

rm -rf ${RUNDIR}

%include <tail.h>

